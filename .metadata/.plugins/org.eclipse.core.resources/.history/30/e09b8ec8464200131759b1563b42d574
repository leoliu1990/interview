package edu.rice.lca;

import java.util.Stack;

import edu.rice.tree.BinaryTree;
import edu.rice.tree.Node;

public class LCAFinder {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	public Node findLCA(Node root, Node n1, Node n2){
		if(root == null || root.getData() == n1.getData() && root.getData() == n2.getData())
			return root;
		Node l = findLCA(root.getLeft(), n1, n2);
		Node r = findLCA(root.getRight(), n1, n2);
		
		if(l != null && r != null)
			return root;
		
	}
	
	private boolean findNode(Node root, Node target){
		if(root == null)
			return false;
		if(root.getData() == target.getData())
			return true;
		return findNode(root.getLeft(), target) || findNode(root.getRight(), target);
	}
}
